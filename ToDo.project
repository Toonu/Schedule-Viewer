Java IC energo 

Input checking on each line > output on which line the error is
Args checking 

Load each row and make object
Have a object with name, repeating and first and last date, calculate everything else 

Create output from objects

Arg for cancellation on any row being faulty.


Cíl:

Vyvinout konzolovou Java aplikaci, která načítá textový soubor obsahující program údržby a generuje plán údržby. Program údržby se skládá ze sady činností, z nichž každá má specifickou periodu, rozdělenou na počet a jednotku (např. každé 2 týdny, každých 6 měsíců). Aplikace by měla materializovat harmonogram těchto činností od počátečního data až po poslední výskyt.

Požadavky:

1. Zpracování vstupního souboru:
Formát souboru: Aplikace by měla načítat textový soubor s názvem program_udrzby.txt.
Struktura dat: Každý řádek v souboru představuje údržbovou činnost s následujícími poli, oddělenými oddělovačem (např. znakem |):

Název činnosti: Popisný název údržbové činnosti.
Počáteční datum: Datum, kdy údržbová činnost začíná.
Perioda: Číselná hodnota určující frekvenci periody.
Jednotka: Jednotka periody (dny, týdny, měsíce, roky).
Koncové datum: Datum, kdy údržbová činnost končí nebo již nemá být plánována.
Vzorový formát řádku:
Název činnosti | Počáteční datum | Perioda | Jednotka | Koncové datum

Zde je příklad, jak by mohl soubor program_udrzby.txt vypadat:
# Název činnosti | Počáteční datum | Perioda | Jednotka | Koncové datum
Výměna filtrů vzduchu | 2023-01-01 | 3 | M | 2023-12-31
Bezpečnostní inspekce | 2023-02-15 | 1 | M | 2023-08-15
Mazání zařízení | 2023-01-01 | 2 | W | 2023-06-01
Generální oprava systému | 2023-01-01 | 1 | Y | 2025-01-01
 
M - month, W - week, Y year, D - day
 
2. Generování plánu údržby:
Výpočet harmonogramu: Pro každou činnost vypočítat všechna plánovaná data od počátečního data do koncového data na základě periody.
Výstup: Vypsat plán údržby na konzoli v přehledném formátu, například jako tabulku se sloupci pro Název činnosti a Plánované datum.

3. Technické požadavky:
Programovací jazyk: Použijte Java SE 8 nebo vyšší.
Objektově orientovaný design: Vhodně využijte třídy a objekty pro modelování údržbových činností a plánu.
Knihovny: Můžete použít standardní Java knihovny pro práci s daty a časy (např. balíček java.time).

4.Dokumentace:
Přiložte soubor README s instrukcemi, jak aplikaci zkompilovat a spustit.